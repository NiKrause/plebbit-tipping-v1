name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    environment: deployment  # Add this line to use the deployment environment
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies (with workspaces)
      run: npm ci

    - name: Install network tools
      run: |
        sudo apt-get update
        sudo apt-get install -y iproute2 net-tools lsof netcat-openbsd
      
    - name: Compile contracts
      run: |
        cd contracts
        npm run compile
        
    - name: Start Hardhat node, deploy contracts, and run tests
      env:
        MAINNET_RPC_URL: ${{ secrets.MAINNET_RPC_URL || env.MAINNET_RPC_URL }}
        ADMIN_ADDRESS: ${{ env.ADMIN_ADDRESS || '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266' }}
      run: |
        cd contracts
        echo "=== Starting Hardhat node and deploying contracts ==="
        echo "MAINNET_RPC_URL is set: $([[ -n "$MAINNET_RPC_URL" ]] && echo "YES" || echo "NO")"
        echo "ADMIN_ADDRESS: $ADMIN_ADDRESS"
        
        # Create .env file to ensure environment variables are available to the deployment script
        echo "ADMIN_ADDRESS=$ADMIN_ADDRESS" > .env
        if [[ -n "$MAINNET_RPC_URL" ]]; then
          echo "MAINNET_RPC_URL=$MAINNET_RPC_URL" >> .env
        fi
        
        echo "=== Created .env file with contents ==="
        cat .env
        
        # Start hardhat node with mainnet fork in background
        if [[ -n "$MAINNET_RPC_URL" ]]; then
          echo "=== Starting with mainnet fork ==="
          nohup npx hardhat node --fork "$MAINNET_RPC_URL" --no-deploy --hostname 127.0.0.1 --port 8545 > hardhat.log 2>&1 &
        else
          echo "=== Starting without fork (no MAINNET_RPC_URL) ==="
          nohup npx hardhat node --no-deploy --hostname 127.0.0.1 --port 8545 > hardhat.log 2>&1 &
        fi
        
        HARDHAT_PID=$!
        echo $HARDHAT_PID > hardhat.pid
        echo "Hardhat node started with PID: $HARDHAT_PID"
        
        # Wait for node to be ready
        echo "Waiting for node to be ready..."
        timeout 90s bash -c 'until nc -z 127.0.0.1 8545; do
          echo "Waiting for port 8545... $(date)"
          echo "=== Latest hardhat logs ==="
          tail -10 hardhat.log 2>/dev/null || echo "No logs yet"
          sleep 3
        done'
        echo "Hardhat node is ready"
        
        # Now deploy the contracts
        echo "=== Deploying contracts ==="
        npm run deploy:localhost
        
        # Verify deployment was successful
        if [ -f "deployments/localhost/PlebbitTippingV1.json" ]; then
          DEPLOYED_ADDRESS=$(grep -o '"address": "[^"]*"' deployments/localhost/PlebbitTippingV1.json | cut -d'"' -f4)
          echo "✅ Contract deployed successfully at: $DEPLOYED_ADDRESS"
        else
          echo "❌ Deployment file not found"
          exit 1
        fi
        
        # Build JS API
        echo "=== Building JS API ==="
        cd ../js-api
        npm run build
        
        # Run contract tests
        echo "=== Running contract tests ==="
        cd ../contracts
        npm test
        
        # Run JS API tests
        echo "=== Running JS API unit tests ==="
        cd ../js-api
        npm test
        
        # Run JS API integration tests
        echo "=== Running JS API integration tests ==="
        npm run test:integration || echo "Integration tests not available"
        
        # Cleanup
        echo "=== Cleaning up Hardhat processes ==="
        cd ../contracts
        if [ -f hardhat.pid ]; then
          echo "Killing process $(cat hardhat.pid)"
          kill $(cat hardhat.pid) 2>/dev/null || true
          rm hardhat.pid
        fi
        pkill -f "hardhat node" 2>/dev/null || true
        echo "=== Final process check ==="
        ps aux | grep hardhat || echo "No hardhat processes remaining"
        
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies (with workspaces)
      run: npm ci
        
    - name: Build TypeScript
      run: |
        cd js-api
        npm run build
        
    - name: Check TypeScript types
      run: |
        cd js-api
        npx tsc --noEmit