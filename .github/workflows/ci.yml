name: CI

on:
  push:
    branches: [ main, js-api ]
  pull_request:
    branches: [ main, js-api ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: development
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 22.x
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm run install:all
        
    - name: Build everything
      run: npm run build
        
    - name: Setup environment for deployment
      env:
        ADMIN_ADDRESS: "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
        NETWORK_0: ${{ secrets.MAINNET_RPC_URL }}
      run: |
        # Check if required environment variables are set
        echo "üîç Checking environment variables..."
        
        if [ -z "$ADMIN_ADDRESS" ]; then
          echo "‚ùå ADMIN_ADDRESS is not set"
          exit 1
        else
          echo "‚úÖ ADMIN_ADDRESS is set: $ADMIN_ADDRESS"
        fi
        
        if [ -z "$NETWORK_0" ]; then
          echo "‚ùå NETWORK_0 is not set (MAINNET_RPC_URL secret might be missing)"
          echo "üí° Please add MAINNET_RPC_URL to your GitHub repository secrets"
          exit 1
        else
          echo "‚úÖ NETWORK_0 is set: ${NETWORK_0:0:5}..." # Show only first 5 chars for security
        fi
        
        # Create .env file for deployment script
        echo "üìù Creating .env file..."
        echo "ADMIN_ADDRESS=$ADMIN_ADDRESS" > contracts/.env
        echo "NETWORK_0=$NETWORK_0" >> contracts/.env
        
        echo "‚úÖ Environment setup complete"
        
    - name: Run tests with Hardhat node
      env:
        NETWORK_0: ${{ secrets.MAINNET_RPC_URL }}
      run: |
        set -e  # Exit on any error
        
        # Function to cleanup processes
        cleanup() {
          echo "üßπ Cleaning up processes..."
          if [ ! -z "$HARDHAT_PID" ] && kill -0 "$HARDHAT_PID" 2>/dev/null; then
            echo "Stopping Hardhat node (PID: $HARDHAT_PID)"
            kill "$HARDHAT_PID" 2>/dev/null || true
            # Wait for process to stop
            for i in {1..10}; do
              if ! kill -0 "$HARDHAT_PID" 2>/dev/null; then
                break
              fi
              sleep 1
            done
          fi
          # Force kill any remaining hardhat processes
          pkill -f "hardhat node" 2>/dev/null || true
        }
        
        # Set trap to cleanup on script exit
        trap cleanup EXIT INT TERM
        
        # Start Hardhat node in background
        echo "=== Starting Hardhat node ==="
        # npm run node > hardhat.log 2>&1 &
        npm run node:fork > hardhat.log 2>&1 &
        HARDHAT_PID=$!
        echo "Hardhat node started with PID: $HARDHAT_PID"
        
        # Wait for node to be ready with timeout
        echo "‚è≥ Waiting for Hardhat node to be ready..."
        for i in {1..30}; do
          if curl -s -X POST \
            -H "Content-Type: application/json" \
            -d '{"jsonrpc":"2.0","method":"net_version","params":[],"id":1}' \
            http://127.0.0.1:8545 >/dev/null 2>&1; then
            echo "‚úÖ Hardhat node is ready!"
            break
          fi
          if [ $i -eq 30 ]; then
            echo "‚ùå Timeout waiting for Hardhat node to start"
            echo "=== Hardhat logs ==="
            cat hardhat.log || echo "No logs available"
            exit 1
          fi
          sleep 2
        done
        
        # Deploy contracts
        echo "üì¶ Deploying contracts..."
        npm run deploy:localhost
        
        # Verify deployment
        if [ -f "contracts/deployments/localhost/PlebbitTippingV1.json" ]; then
          DEPLOYED_ADDRESS=$(grep -o '"address": "[^"]*"' contracts/deployments/localhost/PlebbitTippingV1.json | cut -d'"' -f4)
          echo "‚úÖ Contract deployed successfully at: $DEPLOYED_ADDRESS"
        else
          echo "‚ùå Deployment file not found"
          exit 1
        fi
        
        # Run all tests
        echo "üß™ Running all tests..."
        npm test
